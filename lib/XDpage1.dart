import 'package:algolizer/main_screen.dart';

import 'package:flutter/cupertino.dart';
import 'package:flutter/material.dart';
import 'package:adobe_xd/pinned.dart';
import 'package:flutter_svg/flutter_svg.dart';

class page1 extends StatelessWidget {
  page1({
    key,
  }) : super(key: key);

  @override
  Widget build(BuildContext context) {
    return SafeArea(
      child: Scaffold(
        backgroundColor: const Color(0xffffffff),
        body: Stack(
          children: <Widget>[
            Pinned.fromPins(
              Pin(start: 0.0, end: 0.0),
              Pin(start: 0.0, end: 0.0),
              child: Container(
                decoration: BoxDecoration(
                  gradient: LinearGradient(
                    begin: Alignment(0.0, -1.0),
                    end: Alignment(0.0, 1.0),
                    colors: [
                      const Color(0xffffffff),
                      const Color(0xff06506b),
                      const Color(0x214371c9)
                    ],
                    stops: [0.0, 0.0, 1.0],
                  ),
                ),
              ),
            ),
            Transform.translate(
              offset: Offset((MediaQuery.of(context).size.width) / 9, 200),
              child: SizedBox(
                width: 285.0,
                height: 247.0,
                child: Stack(
                  children: <Widget>[
                    Transform.translate(
                      offset: Offset(26.1, 8.4),
                      child: SizedBox(
                        width: 237.0,
                        height: 238.0,
                        child: SvgPicture.string(
                          _svg_tj6k0r,
                          allowDrawingOutsideViewBox: true,
                        ),
                      ),
                    ),
                    Transform.translate(
                      offset: Offset(17.3, 106.1),
                      child:
                          // Adobe XD layer: 'Ellipse 300' (shape)
                          Container(
                        width: 19.4,
                        height: 20.1,
                        decoration: BoxDecoration(
                          borderRadius:
                              BorderRadius.all(Radius.elliptical(9999.0, 9999.0)),
                          color: const Color(0xff6c63ff),
                        ),
                      ),
                    ),
                    Transform.translate(
                      offset: Offset(62.3, 54.1),
                      child:
                          // Adobe XD layer: 'Ellipse 301' (shape)
                          Container(
                        width: 19.4,
                        height: 20.1,
                        decoration: BoxDecoration(
                          borderRadius:
                              BorderRadius.all(Radius.elliptical(9999.0, 9999.0)),
                          color: const Color(0xffcccccc),
                        ),
                      ),
                    ),
                    Transform.translate(
                      offset: Offset(107.4, 80.3),
                      child:
                          // Adobe XD layer: 'Ellipse 302' (shape)
                          Container(
                        width: 19.4,
                        height: 20.1,
                        decoration: BoxDecoration(
                          borderRadius:
                              BorderRadius.all(Radius.elliptical(9999.0, 9999.0)),
                          color: const Color(0xffe6e6e6),
                        ),
                      ),
                    ),
                    Transform.translate(
                      offset: Offset(152.4, 0.0),
                      child:
                          // Adobe XD layer: 'Ellipse 303' (shape)
                          Container(
                        width: 19.4,
                        height: 20.1,
                        decoration: BoxDecoration(
                          borderRadius:
                              BorderRadius.all(Radius.elliptical(9999.0, 9999.0)),
                          color: const Color(0xff6c63ff),
                        ),
                      ),
                    ),
                    Transform.translate(
                      offset: Offset(239.0, 74.8),
                      child:
                          // Adobe XD layer: 'Ellipse 304' (shape)
                          Container(
                        width: 19.4,
                        height: 20.1,
                        decoration: BoxDecoration(
                          borderRadius:
                              BorderRadius.all(Radius.elliptical(9999.0, 9999.0)),
                          color: const Color(0xff6c63ff),
                        ),
                      ),
                    ),
                    Transform.translate(
                      offset: Offset(197.3, 84.8),
                      child: SizedBox(
                        width: 68.0,
                        height: 161.0,
                        child: SvgPicture.string(
                          _svg_gi5n54,
                          allowDrawingOutsideViewBox: true,
                        ),
                      ),
                    ),
                    Transform.translate(
                      offset: Offset(238.4, 110.0),
                      child:
                          // Adobe XD layer: 'Ellipse 307' (shape)
                          Container(
                        width: 14.4,
                        height: 14.9,
                        decoration: BoxDecoration(
                          borderRadius:
                              BorderRadius.all(Radius.elliptical(9999.0, 9999.0)),
                          color: const Color(0xff9e616a),
                        ),
                      ),
                    ),
                    Transform.translate(
                      offset: Offset(0.0, 63.1),
                      child: SizedBox(
                        width: 285.0,
                        height: 184.0,
                        child: SvgPicture.string(
                          _svg_9xyxz7,
                          allowDrawingOutsideViewBox: true,
                        ),
                      ),
                    ),
                    Transform.translate(
                      offset: Offset(214.2, 91.9),
                      child: Container(
                        width: 6.2,
                        height: 6.5,
                        decoration: BoxDecoration(
                          borderRadius:
                              BorderRadius.all(Radius.elliptical(9999.0, 9999.0)),
                          color: const Color(0xffa0616a),
                        ),
                      ),
                    ),
                    Transform.translate(
                      offset: Offset(248.8, 90.5),
                      child: Container(
                        width: 6.2,
                        height: 6.5,
                        decoration: BoxDecoration(
                          borderRadius:
                              BorderRadius.all(Radius.elliptical(9999.0, 9999.0)),
                          color: const Color(0xffa0616a),
                        ),
                      ),
                    ),
                  ],
                ),
              ),
            ),
            Positioned(
              top: 460,
              right: 40,
              child: Text(
                'Algolizer is an interactive app that \nvisualizes sorting algorithms.',
                style: TextStyle(
                  fontFamily: 'Lucida Bright',
                  fontSize: 18,
                  color: Colors.white,
                  shadows: [
                    Shadow(
                      color: const Color(0x29000000),
                      offset: Offset(5, 5),
                      blurRadius: 99,
                    )
                  ],
                ),
                textAlign: TextAlign.center,
              ),
            ),
            Pinned.fromPins(
              Pin(size: 209.0, middle: 0.5),
              Pin(size: 61.0, start: 48.0),
              child: Text(
                'Algolizer',
                style: TextStyle(
                  fontFamily: 'Century Gothic',
                  fontSize: 50,
                  color: const Color(0xfffaf5f5),
                  fontWeight: FontWeight.w700,
                ),
                textAlign: TextAlign.center,
              ),
            ),
            Pinned.fromPins(
              Pin(start: 42.0, end: 56.0),
              Pin(size: 48.0, end: 57.0),
              child:
                  // Adobe XD layer: 'Continue' (group)
                  Stack(
                children: <Widget>[
                  Container(
                    decoration: BoxDecoration(
                      borderRadius: BorderRadius.circular(24.0),
                      color: const Color(0xff07516c),
                    ),
                  ),
                  InkWell(
                    child: Padding(
                      padding: const EdgeInsets.symmetric(
                          horizontal: 87, vertical: 13),
                      child: Text(
                        'CONTINUE',
                        style: TextStyle(
                          fontFamily: 'Arial',
                          fontSize: 18,
                          color: const Color(0xffffffff),
                          fontWeight: FontWeight.w700,
                          height: 1.2,
                        ),
                        textHeightBehavior:
                            TextHeightBehavior(applyHeightToFirstAscent: false),
                        textAlign: TextAlign.center,
                      ),
                    ),
                    onTap: () {
                      Navigator.pushReplacement(
                          context,
                          CupertinoPageRoute(
                              builder: (context) => main_screen()));
                    },
                  ),
                ],
              ),
            ),
          ],
        ),
      ),
    );
  }
}

const String _svg_tj6k0r =
    '<svg viewBox="26.1 8.4 236.9 237.7" ><path transform="translate(-482.23, -402.36)" d="M 744.1704711914063 644.2232055664063 L 739.922607421875 644.2228393554688 L 737.9019775390625 627.2680053710938 L 744.171142578125 627.2680053710938 L 744.1704711914063 644.2232055664063 Z" fill="#9e616a" stroke="none" stroke-width="1" stroke-miterlimit="4" stroke-linecap="butt" /><path transform="translate(-659.68, -536.22)" d="M 922.7026977539063 782.347900390625 L 909.006103515625 782.3473510742188 L 909.006103515625 782.1680908203125 C 909.006103515625 779.1217041015625 911.3926391601563 776.6517944335938 914.3367919921875 776.6513671875 L 914.3375244140625 776.6513671875 L 922.702880859375 776.6517333984375 L 922.7026977539063 782.347900390625 Z" fill="#2f2e41" stroke="none" stroke-width="1" stroke-miterlimit="4" stroke-linecap="butt" /><path transform="translate(-451.52, -402.36)" d="M 697.1704711914063 644.2232055664063 L 692.9226684570313 644.2228393554688 L 690.9019775390625 627.2680053710938 L 697.171142578125 627.2680053710938 L 697.1704711914063 644.2232055664063 Z" fill="#9e616a" stroke="none" stroke-width="1" stroke-miterlimit="4" stroke-linecap="butt" /><path transform="translate(-628.97, -536.22)" d="M 875.7026977539063 782.347900390625 L 862.006103515625 782.3473510742188 L 862.006103515625 782.1680908203125 C 862.006103515625 779.1217041015625 864.392578125 776.6517333984375 867.3367919921875 776.6513671875 L 867.3375244140625 776.6513671875 L 875.702880859375 776.6517333984375 L 875.7026977539063 782.347900390625 Z" fill="#2f2e41" stroke="none" stroke-width="1" stroke-miterlimit="4" stroke-linecap="butt" /><path transform="translate(-306.61, -295.96)" d="M 368.7479858398438 541.424072265625 L 368.7479858398438 405.242431640625 C 368.7479858398438 403.495849609375 370.1161499023438 402.0800170898438 371.8039245605469 402.0800170898438 L 385.4412841796875 402.0800170898438 C 387.1290588378906 402.0800170898438 388.4972534179688 403.495849609375 388.4972534179688 405.242431640625 L 388.4972534179688 405.242431640625 L 388.4972534179688 541.779052734375 L 368.7479858398438 541.424072265625 Z" fill="#3f3d56" stroke="none" stroke-width="1" stroke-miterlimit="4" stroke-linecap="butt" /><path transform="translate(-391.57, -346.63)" d="M 498.7479858398438 592.525146484375 L 498.7479858398438 484.242431640625 C 498.7479858398438 482.495849609375 500.1161804199219 481.0799865722656 501.8039245605469 481.0799865722656 L 515.4412841796875 481.0799865722656 C 517.1290283203125 481.0799865722656 518.4972534179688 482.495849609375 518.4972534179688 484.242431640625 L 518.4972534179688 484.242431640625 L 518.4972534179688 592.2920532226563 L 498.7479858398438 592.525146484375 Z" fill="#3f3d56" stroke="none" stroke-width="1" stroke-miterlimit="4" stroke-linecap="butt" /><path transform="translate(-238.65, -121.13)" d="M 265.7869873046875 238.3797607421875 C 265.3771667480469 238.3797302246094 265.0054321289063 238.1302490234375 264.8381958007813 237.7427673339844 C 264.6709594726563 237.3550415039063 264.7396240234375 236.9020690917969 265.0133666992188 236.5861206054688 L 310.6116638183594 183.9539184570313 L 355.4871215820313 210.0312042236328 L 400.6294555664063 129.5370025634766 L 446.6168212890625 168.7070159912109 C 447.0600891113281 169.0845489501953 447.1236572265625 169.762451171875 446.7588195800781 170.2211303710938 C 446.3940124511719 170.6798400878906 445.7389526367188 170.7456359863281 445.2956848144531 170.3681335449219 L 401.1983642578125 132.8080749511719 L 356.2562866210938 212.9455261230469 L 311.047119140625 186.6740417480469 L 266.5613708496094 238.0219421386719 C 266.3643798828125 238.2500305175781 266.0826416015625 238.3802185058594 265.7869873046875 238.3797607421875 Z" fill="#3f3d56" stroke="none" stroke-width="1" stroke-miterlimit="4" stroke-linecap="butt" /></svg>';
const String _svg_gi5n54 =
    '<svg viewBox="197.3 84.8 67.8 161.0" ><path transform="translate(-630.15, -395.43)" d="M 875.43408203125 558.4521484375 C 879.0650634765625 558.90478515625 888.3504638671875 555.4768676757813 888.8536987304688 560.6917724609375 C 893.6329345703125 575.2507934570313 892.142822265625 590.2505493164063 893.282958984375 605.2684326171875 C 893.522705078125 613.7392578125 896.998779296875 623.3733520507813 894.0267333984375 631.0228881835938 C 894.1180419921875 636.4996948242188 884.4429321289063 633.5782470703125 882.5473022460938 630.2950439453125 C 884.6719970703125 629.779296875 880.40087890625 587.074462890625 877.651611328125 577.587890625 C 876.27197265625 589.1185302734375 874.8334350585938 602.3181762695313 877.9597778320313 614.959716796875 C 880.2791748046875 621.6961669921875 880.0250244140625 631.85107421875 880.0250244140625 631.85107421875 L 869.2945556640625 633.7838134765625 C 869.2945556640625 633.7838134765625 864.0255126953125 596.0228881835938 863.9918212890625 585.0028076171875 C 863.274169921875 576.9305419921875 865.0343017578125 564.9683837890625 864.281005859375 557.1649169921875 C 867.88134765625 558.3457641601563 871.6707763671875 558.7830810546875 875.43408203125 558.4520874023438 Z" fill="#3f3d56" stroke="none" stroke-width="1" stroke-miterlimit="4" stroke-linecap="butt" /><path transform="translate(-561.49, -257.82)" d="M 758.7479858398438 503.236572265625 L 758.7479858398438 346.2789916992188 C 758.7479858398438 344.2660827636719 760.1162109375 342.6339721679688 761.803955078125 342.6339721679688 L 775.4412841796875 342.6339721679688 C 777.1290283203125 342.6339721679688 778.4972534179688 344.2657470703125 778.4972534179688 346.2789916992188 L 778.4972534179688 503.6474609375 L 758.7479858398438 503.236572265625 Z" fill="#3f3d56" stroke="none" stroke-width="1" stroke-miterlimit="4" stroke-linecap="butt" /><path transform="translate(-599.47, -274.49)" d="M 832.3997192382813 395.2669677734375 C 830.9434204101563 392.18603515625 829.16455078125 389.2798461914063 827.0951538085938 386.6007690429688 C 826.6627197265625 386.0775146484375 826.2689819335938 385.5214233398438 825.9171142578125 384.9370727539063 C 825.1721801757813 383.5996704101563 824.950439453125 382.0292358398438 824.479248046875 380.5663452148438 C 823.16259765625 376.4645080566406 819.8779296875 373.16943359375 819.07763671875 368.927734375 C 818.7865600585938 367.385986328125 816.3280639648438 371.8671264648438 816.9744873046875 373.7789611816406 C 818.1282958984375 377.2389831542969 818.2772216796875 380.9033813476563 819.746337890625 384.2450866699219 C 821.21533203125 387.5867919921875 822.9407958984375 390.792236328125 824.208984375 394.209228515625 C 824.9296264648438 396.1490173339844 825.5047607421875 398.1533203125 826.5615234375 399.9460754394531 C 827.6182861328125 401.7388305664063 829.2675170898438 403.2411804199219 831.259765625 403.5100708007813 C 831.2462768554688 402.2104187011719 831.43701171875 400.9171142578125 831.8245849609375 399.6807556152344 C 832.2576904296875 398.26806640625 833.02685546875 396.6043701171875 832.3997192382813 395.2669677734375 Z" fill="#9e616a" stroke="none" stroke-width="1" stroke-miterlimit="4" stroke-linecap="butt" /><path transform="translate(-662.4, -277.08)" d="M 917.1272583007813 400.1867065429688 C 917.0382080078125 397.6513977050781 917.4204711914063 395.1220092773438 918.2532958984375 392.7359619140625 C 918.5720825195313 391.8216552734375 918.9462890625 390.8930053710938 918.9151000976563 389.9213256835938 C 918.8700561523438 389.0177917480469 918.4542236328125 388.1895446777344 918.07666015625 387.3720397949219 C 916.7738647460938 384.5574035644531 915.859130859375 381.5742492675781 914.9583129882813 378.5982666015625 L 913.2259521484375 372.9869384765625 C 912.6611328125 372.5583190917969 915.9595947265625 372.40966796875 916.6629638671875 373.4172058105469 C 918.963623046875 376.7230529785156 920.7063598632813 380.5201416015625 922.52880859375 384.1307373046875 C 922.9937133789063 384.9910888671875 923.3900146484375 385.8892822265625 923.7138061523438 386.8162841796875 C 924.158935546875 388.3186645507813 924.369384765625 389.8848876953125 924.33740234375 391.4559326171875 C 924.3374633789063 394.3925170898438 923.9632568359375 397.3182983398438 923.5751953125 400.229736328125 C 923.3292236328125 402.0547485351563 923.0069580078125 404.0411376953125 921.673095703125 405.2494506835938 C 920.2871704101563 403.4136352539063 918.894287109375 401.6209106445313 917.1272583007813 400.1867065429688 Z" fill="#9e616a" stroke="none" stroke-width="1" stroke-miterlimit="4" stroke-linecap="butt" /></svg>';
const String _svg_9xyxz7 =
    '<svg viewBox="0.0 63.1 284.5 183.5" ><path transform="translate(-621.12, -319.2)" d="M 872.6598510742188 444.278564453125 C 873.7962646484375 443.6224365234375 874.1392822265625 442.0232849121094 875.230712890625 441.2882690429688 C 876.3220825195313 440.55322265625 877.870849609375 440.9619750976563 878.8202514648438 441.890625 C 879.7696533203125 442.8192749023438 880.251220703125 444.142333984375 880.6392822265625 445.4367065429688 C 881.2185668945313 447.1868896484375 881.532958984375 449.0191955566406 881.5712890625 450.8687744140625 C 881.5857543945313 451.2070922851563 881.533935546875 451.544921875 881.4188842773438 451.8619689941406 C 881.21337890625 452.2319946289063 880.9539184570313 452.5670166015625 880.649658203125 452.8551025390625 C 879.8269653320313 453.8105773925781 877.7981567382813 472.8587646484375 877.6976318359375 473.7228393554688 C 877.5877075195313 474.4279479980469 877.584228515625 475.1464233398438 877.687255859375 475.8526306152344 C 878.4737548828125 478.2155151367188 880.59765625 483.629638671875 880.576904296875 486.13232421875 C 876.8869018554688 485.1535034179688 871.4472045898438 484.9347534179688 867.635986328125 484.9168395996094 C 866.5878295898438 484.9054565429688 865.5399169921875 484.953369140625 864.4968872070313 485.0602416992188 C 861.9918212890625 485.3399658203125 859.4278564453125 486.0964965820313 856.9990234375 485.3973083496094 C 854.7434692382813 484.7483215332031 856.583251953125 485.1642456054688 854.2528686523438 485.3973083496094 C 853.7469482421875 484.0276489257813 852.1795654296875 454.6407165527344 851.704833984375 452.6256713867188 C 851.6181640625 452.1488647460938 851.4415283203125 451.6944580078125 851.1851806640625 451.2882690429688 C 850.9226684570313 450.8782043457031 850.4754028320313 450.6359558105469 850.000244140625 450.6464233398438 C 849.95703125 447.4051513671875 850.2473754882813 444.1683044433594 850.8663940429688 440.9906311035156 C 851.0950927734375 439.8612060546875 851.559326171875 438.5274047851563 852.678466796875 438.3337707519531 C 853.66943359375 438.1580810546875 854.5009765625 439.0257568359375 855.2978515625 439.660400390625 C 856.114990234375 440.31494140625 857.061279296875 440.7752685546875 858.0697021484375 441.0086059570313 C 858.230712890625 441.0635986328125 858.383544921875 441.1414184570313 858.52392578125 441.2398376464844 C 859.508544921875 441.8235473632813 864.773193359375 445.2520141601563 865.796142578125 445.536865234375 C 865.796142578125 445.537109375 871.998046875 444.6586303710938 872.6598510742188 444.278564453125 Z" fill="#e6e6e6" stroke="none" stroke-width="1" stroke-miterlimit="4" stroke-linecap="butt" /><path transform="translate(-641.43, -295.57)" d="M 881.1507568359375 405.4281921386719 C 880.9917602539063 404.9837036132813 881.0902099609375 404.4844360351563 881.4046630859375 404.139892578125 C 881.577880859375 403.9986572265625 881.8079833984375 403.9459228515625 881.99365234375 403.8111267089844 C 882.2576904296875 403.5814208984375 882.4737548828125 403.2985229492188 882.6287841796875 402.9796447753906 C 883.607421875 401.5624389648438 885.431640625 401.083251953125 886.9448852539063 401.845947265625 C 888.0913696289063 402.4669189453125 888.7836303710938 403.7103881835938 889.8033447265625 404.547607421875 C 890.3209228515625 404.9814453125 890.92138671875 405.3034057617188 891.442138671875 405.7372741699219 C 892.4852294921875 406.6697387695313 893.226806640625 407.9109497070313 893.5667724609375 409.2933959960938 C 893.9049072265625 410.6664428710938 894.102294921875 412.0725708007813 894.15576171875 413.4884338378906 C 894.2100219726563 413.9132690429688 894.1939697265625 414.3445434570313 894.1082763671875 414.7637939453125 C 894.0028076171875 415.1154174804688 893.8453979492188 415.4480590820313 893.6416015625 415.7498474121094 C 892.593505859375 417.39306640625 891.2120361328125 418.8853759765625 889.4810791015625 419.7333374023438 C 887.7501220703125 420.581298828125 885.64453125 420.7193603515625 883.9374389648438 419.8319702148438 C 883.7655029296875 419.760009765625 883.61767578125 419.6377563476563 883.511962890625 419.4801940917969 C 883.4149169921875 419.2402648925781 883.3916625976563 418.9752197265625 883.4454345703125 418.7211303710938 C 883.5379638671875 417.7166748046875 883.345947265625 416.7059936523438 882.8927612304688 415.8125610351563 C 882.5750732421875 415.1553344726563 882.0986328125 414.5899047851563 881.8447265625 413.9097290039063 C 881.6083984375 413.1482849121094 881.5072021484375 412.348876953125 881.5460205078125 411.5501098632813 C 881.515869140625 409.4805297851563 881.6517333984375 407.419921875 881.1507568359375 405.4281921386719 Z" fill="#2d293d" stroke="none" stroke-width="1" stroke-miterlimit="4" stroke-linecap="butt" /><path transform="translate(-221.65, -406.81)" d="M 238.7469787597656 652.4364624023438 L 238.7469787597656 576.6597290039063 C 238.7469787597656 575.6880493164063 240.115234375 574.8999633789063 241.8029174804688 574.8999633789063 L 255.4403076171875 574.8999633789063 C 257.1280212402344 574.8999633789063 258.4962463378906 575.6887817382813 258.4962463378906 576.6597290039063 L 258.4962463378906 652.634033203125 L 238.7469787597656 652.4364624023438 Z" fill="#3f3d56" stroke="none" stroke-width="1" stroke-miterlimit="4" stroke-linecap="butt" /><path transform="translate(-189.42, -546.01)" d="M 473.5885314941406 792.6181030273438 L 189.7624816894531 792.6181030273438 C 189.5711059570313 792.6181030273438 189.4159851074219 792.4575805664063 189.4159851074219 792.259521484375 C 189.4159851074219 792.0615234375 189.5711059570313 791.9010009765625 189.7624816894531 791.9010009765625 L 473.5864562988281 791.9010009765625 C 473.7778015136719 791.9010009765625 473.9329223632813 792.0615234375 473.9329223632813 792.259521484375 C 473.9329223632813 792.4575805664063 473.7778015136719 792.6181030273438 473.5864562988281 792.6181030273438 Z" fill="#e6e6e6" stroke="none" stroke-width="1" stroke-miterlimit="4" stroke-linecap="butt" /><path transform="translate(-476.53, -218.99)" d="M 628.7470092773438 464.3531188964844 L 628.7470092773438 286.2352600097656 C 628.7470092773438 283.950927734375 630.115234375 282.0989990234375 631.802978515625 282.0989990234375 L 645.4403076171875 282.0989990234375 C 647.1279907226563 282.0989990234375 648.4962768554688 283.950927734375 648.4962768554688 286.2352600097656 L 648.4962768554688 464.8174438476563 L 628.7470092773438 464.3531188964844 Z" fill="#6c63ff" stroke="none" stroke-width="1" stroke-miterlimit="4" stroke-linecap="butt" /></svg>';
